// ReverseGeocacheProtocol.h was generated by ProtoGen version 1.4.1.a

#ifndef _REVERSEGEOCACHEPROTOCOL_H
#define _REVERSEGEOCACHEPROTOCOL_H

// C++ compilers: don't mangle us
#ifdef __cplusplus
extern "C" {
#endif

/*!
 * \file
 * \mainpage ReverseGeocache protocol stack
 *

 *
 * The protocol API enumeration is incremented anytime the protocol is changed
 * in a way that affects compatibility with earlier versions of the protocol.
 * The protocol enumeration for this version is: 1
 *
 * The protocol version is 1.0.0.a
 */

#include <stdint.h>
#include <string.h>	// C string manipulation function header

/*!
 * USB Packet types
 */
typedef enum
{
    MSG_RESET_INTO_BOOTLOADER = 0x0A,    
    MSG_ENABLE_DEBUG_MODE,               
    MSG_SYSTEM_INFO = 0xA0,              
    MSG_CLUE_INFO = 0xB0,                
    MSG_CLUE_LINE = 0xC0,                
    MSG_UNLOCK = 0xD0,                   
    MSG_LOCK,                            
    MSG_NEXT_CLUE = 0xE0,                
    MSG_PREV_CLUE,                       
    MSG_FIRST_CLUE,                      
    MSG_LAST_CLUE,                       
    MSG_SET_CLUE_COUNT = 0xF0,           
    MSG_INVALIDATE_CLUES,                
    MSG_VALIDATE_CLUES                   
}Packet;

typedef enum
{
    CLUE_NO_HINT = 0x00,     
    CLUE_SHOW_DISTANCE,      
    CLUE_SHOW_LOCATION,      
    CLUE_WARMER_COOLER,      
    CLUE_SHOW_HEADING,       
    CLUE_SHOW_CARDINAL,      
    NUM_CLUE_TYPES           
}ClueTypes;

//! \return the protocol API enumeration
#define getReverseGeocacheApi() 1

//! \return the protocol version string
#define getReverseGeocacheVersion() "1.0.0.a"

// The prototypes below provide an interface to the packets.
// They are not auto-generated functions, but must be hand-written

//! \return the packet data pointer from the packet
uint8_t* getReverseGeocachePacketData(void* pkt);

//! \return the packet data pointer from the packet, const
const uint8_t* getReverseGeocachePacketDataConst(const void* pkt);

//! Complete a packet after the data have been encoded
void finishReverseGeocachePacket(void* pkt, int size, uint32_t packetID);

//! \return the size of a packet from the packet header
int getReverseGeocachePacketSize(const void* pkt);

//! \return the ID of a packet from the packet header
uint32_t getReverseGeocachePacketID(const void* pkt);

#ifdef __cplusplus
}
#endif
#endif
