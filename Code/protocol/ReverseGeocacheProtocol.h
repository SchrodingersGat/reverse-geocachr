// ReverseGeocacheProtocol.h was generated by ProtoGen version 2.4.b

#ifndef _REVERSEGEOCACHEPROTOCOL_H
#define _REVERSEGEOCACHEPROTOCOL_H

// C++ compilers: don't mangle us
#ifdef __cplusplus
extern "C" {
#endif

/*!
 * \file
 * \mainpage ReverseGeocache protocol stack
 *
 * Reverse Geocache USB message protocol
 *
 * The protocol API enumeration is incremented anytime the protocol is changed
 * in a way that affects compatibility with earlier versions of the protocol.
 * The protocol enumeration for this version is: 1
 *
 * The protocol version is 1.0.0.a
 */

#include <stdint.h>
#include <string.h>	// C string manipulation function header

//! \return the protocol API enumeration
#define getReverseGeocacheApi() 1

//! \return the protocol version string
#define getReverseGeocacheVersion() "1.0.0.a"
/*!
 * USB Packet types
 */
typedef enum
{
    MSG_RESET_INTO_BOOTLOADER = 0x0A,//!< Enter USB bootloader mode
    MSG_ENABLE_DEBUG_MODE,           //!< Enable extra debugging information
    MSG_SYSTEM_STATUS = 0xA0,        //!< System status information
    MSG_SYSTEM_SETTINGS,             //!< System configuration information
    MSG_SYSTEM_VERSION,              //!< System version information
    MSG_CLUE_INFO = 0xB0,            //!< Clue information
    MSG_CLUE_LINE = 0xC0,            //!< Single line of text for a given clue
    MSG_UNLOCK = 0xD0,               //!< Unlock the box
    MSG_LOCK,                        //!< Lock the box
    MSG_UNLOCK_SETTINGS = 0xD5,      //!< Unlock settings with password
    MSG_LOCK_SETTINGS,               //!< Lock settings with password
    MSG_NEXT_CLUE = 0xE0,            //!< Move to the next clue
    MSG_PREV_CLUE,                   //!< Move to the previous clue
    MSG_FIRST_CLUE,                  //!< Move to the first clue
    MSG_LAST_CLUE,                   //!< Move to the last clue
    MSG_SET_CLUE_COUNT = 0xF0,       //!< Set the total number of clues
    MSG_INVALIDATE_CLUES,            //!< Mark clues as invalid (before download)
    MSG_VALIDATE_CLUES               //!< Mark clues as valid (after download)
} Packet;

typedef enum
{
    CLUE_NO_HINT = 0x00, //!< No extra hint
    CLUE_SHOW_DISTANCE,  //!< Show distance to location
    CLUE_SHOW_LOCATION,  //!< Show coordinates of location
    CLUE_WARMER_COOLER,  //!< Show warmer / cooler (than previous try)
    CLUE_SHOW_HEADING,   //!< Show heading to location in degrees
    CLUE_SHOW_CARDINAL,  //!< Show heading to location in cardinal directions
    NUM_CLUE_TYPES       //!< Number of clue types (not a clue type itself)
} ClueTypes;


// The prototypes below provide an interface to the packets.
// They are not auto-generated functions, but must be hand-written

//! \return the packet data pointer from the packet
uint8_t* getReverseGeocachePacketData(void* pkt);

//! \return the packet data pointer from the packet, const
const uint8_t* getReverseGeocachePacketDataConst(const void* pkt);

//! Complete a packet after the data have been encoded
void finishReverseGeocachePacket(void* pkt, int size, uint32_t packetID);

//! \return the size of a packet from the packet header
int getReverseGeocachePacketSize(const void* pkt);

//! \return the ID of a packet from the packet header
uint32_t getReverseGeocachePacketID(const void* pkt);

#ifdef __cplusplus
}
#endif
#endif
